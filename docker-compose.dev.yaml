version: '3.1'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

  adminer:
    image: adminer
    restart: always
    ports:
      - 9000:8080
  companies:
    image: companies-micro
    build: .
    environment:
      POSTGRES_DSN: "host=db user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB} port=${POSTGRES_PORT} sslmode=disable TimeZone=${TIMEZONE}"
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      HOST: ${APP_HOST}
      PORT: ${APP_PORT}
      JWT_KEY: ${JWT_KEY}
      KAFKA_CLIENT_BOOTSTRAP_SERVERS: "${KAFKA_BROKER_HOSTNAME}:${KAFKA_BROKER_LISTEN_PORT}"
      KAFKA_CLIENT_ID: ${KAFKA_CLIENT_ID}
    depends_on:
      - broker
      - db
    ports:
      - 8081:8081


  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: '${ZOOKEEPER_HOSTNAME}:${ZOOKEEPER_PORT}'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1